schema {
  query: Query
  mutation: Mutation
}

input ColumnFilter {
  caseSensitive: Boolean
  column: String!
  operator: ColumnFilterConditionOperator!
  value: JSON!
}

"""The operator of a field filter"""
enum ColumnFilterConditionOperator {
  Equal
  GreaterThan
  GreaterThanOrEqual
  In
  IsNotNull
  IsNull
  LessThan
  LessThanOrEqual
  Like
  NotEqual
  NotIn
  NotLike
}

type Contact {
  createdAt: DateTimeISO!
  createdByAccountId: String!
  createdByProfileId: String!
  fields: [ContactField!]
  id: String!
  metadata: JSON!
  name: String!
  note: String
  source: String!
  type: ContactType!
  updatedAt: DateTimeISO!
  updatedByAccountId: String
  updatedByProfileId: String
}

input ContactCreateInput {
  fields: [ContactFieldCreateInput!]
  metadata: JSON
  name: String!
  note: String
  source: String!
  type: ContactType!
}

type ContactField {
  createdAt: DateTimeISO!
  createdByAccountId: String!
  createdByProfileId: String!
  id: String!
  label: String
  type: ContactFieldType!
  updatedAt: DateTimeISO!
  updatedByAccountId: String
  updatedByProfileId: String
  value: JSON!
}

input ContactFieldCreateInput {
  label: String
  type: ContactFieldType!
  value: JSON!
}

"""Type of contact field"""
enum ContactFieldType {
  EmailAddress
  PhoneNumber
  StreetAddress
}

input ContactFieldUpdateInput {
  action: ListEntryAction!
  id: String
  label: String
  type: ContactFieldType
  value: JSON
}

"""Type of contact"""
enum ContactType {
  Company
  Person
}

input ContactUpdateInput {
  id: String!
  metadata: JSON
  name: String
  note: String
  source: String
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.This scalar is serialized to a string in ISO 8601 format and parsed from a string in ISO 8601 format.
"""
scalar DateTimeISO

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

enum ListEntryAction {
  Add
  Remove
  Update
}

type Mutation {
  contactCreate(input: ContactCreateInput!): Contact!
  contactDelete(id: String!): Boolean!
  contactFieldUpdate(contactId: String!, input: ContactFieldUpdateInput!): Contact!
  contactUpdate(input: ContactUpdateInput!): Contact!
}

type PagedContactResult {
  items: [Contact!]!
  pagination: Pagination
}

type Pagination {
  itemIndex: Int!
  itemIndexForNextPage: Int
  itemIndexForPreviousPage: Int
  itemsPerPage: Int!
  itemsTotal: Int!
  page: Int!
  pagesTotal: Int!
}

input PaginationInputWithFilters {
  filters: [ColumnFilter!]
  itemIndex: Int
  itemsPerPage: Int!
}

type Query {
  contact(id: String!): Contact!
  contacts(input: PaginationInputWithFilters): PagedContactResult!
}